<?xml version="1.0" encoding="UTF-8"?>
<model xmlns="http://www.aurora-framework.org/schema/bm" xmlns:o="aurora.database.local.oracle" xmlns:f="aurora.database.features" baseTable="sys_function" alias="f">
	<operations>
    	<operation name="query">
            <query-sql>
                select decode(t.role_id, null, 'N', 'Y') as checked,
                       t.role_id,
                       nvl(expanded, 'N') as expanded,
                       t.function_id,
                       t.function_code,
                       t.function_name,
                       t.function_type,
                       t.parent_function_id,
                       t.sequence,
                       t.parent_function_name
                  from (select f.function_id,
                               (select s.role_id
                                  from sys_role_function s
                                 where s.role_id = ${/parameter/@role_id}
                                   and s.function_id = f.function_id) as role_id,
                               f.function_code,
                               f.function_name_id,
                               (select DESCRIPTION_TEXT
                                  from fnd_descriptions
                                 where DESCRIPTION_ID = f.function_name_id
                                   and Language = ${/session/@lang}) AS function_name,
                               pf.function_name_id AS parent_function_name_id,
                               f.function_type,
                               f.parent_function_id,
                               (nvl((select s.sequence
                                      from sys_role_function s
                                     where s.role_id = ${/parameter/@role_id}
                                       and s.function_id = f.function_id),
                                    f.sequence)) AS sequence,
                               (select s.expanded
                                  from sys_role_function s
                                 where s.role_id = ${/parameter/@role_id}
                                   and s.function_id = f.function_id) as expanded,
                               (select DESCRIPTION_TEXT
                                  from fnd_descriptions
                                 where DESCRIPTION_ID = pf.function_name_id
                                   and Language = ${/session/@lang}) AS parent_function_name
                          from new_sys_function f
                          LEFT OUTER JOIN new_sys_function pf ON f.parent_function_id =
                                                             pf.function_id) t

            </query-sql>
        </operation>
	</operations>
    <!--
    <fields>
        <field databaseType="BIGINT" datatype="java.lang.Long" name="function_id"/>
        <field databaseType="VARCHAR" datatype="java.lang.String" name="checked" expression="decode(sr.role_id,2,'Y','N')"/>
        <field databaseType="VARCHAR" datatype="java.lang.String" name="function_code" prompt="功能代码" queryWidth="150" forQuery="true" fordisplay="true" displayWidth="100"/>
        <field databaseType="BIGINT" datatype="java.lang.Long" name="function_name_id" multiLanguage="true" multiLanguageDescField="function_name" />
        <field databaseType="VARCHAR" datatype="java.lang.String" name="function_name" prompt="功能名称" forInsert="false" forUpdate="false" fordisplay="true" displayWidth="200"/>
        <ref-field name="parent_function_name_id" sourceField="function_name_id" relationName="pf" multiLanguage="true" multiLanguageDescField="parent_function_name"/>
        <field databaseType="VARCHAR" datatype="java.lang.String" name="function_type" lookupField="function_type_display" lookupCode="FUNCTION_TYPE"/>
        <field databaseType="BIGINT" datatype="java.lang.Long" name="parent_function_id"/>
        <field databaseType="BIGINT" datatype="java.lang.Long" name="module_id"/>
        <field databaseType="BIGINT" datatype="java.lang.Long" name="sequence" expression="(nvl(sr.sequence,f.sequence))"/>
        <field databaseType="VARCHAR" datatype="java.lang.String" name="command_line"/>
        <field databaseType="VARCHAR" datatype="java.lang.String" name="icon"/>
        <ref-field name="expanded" sourceField="expanded" relationName="sr"/>
    </fields>
    <primary-key>
        <field name="function_id"/>
    </primary-key>
    <relations>   
        <relation name="pf" joinType="LEFT OUTER" refModel="sys.sys_function">
            <reference localField="parent_function_id" foreignField="function_id"/>
        </relation>
        <relation name="sr" joinType="LEFT OUTER" refModel="sys.sys_role_function">
            <reference localField="function_id" foreignField="function_id"/>
        </relation>
    </relations>
    
    <features>        
        <o:sequence-pk/>
        <f:standard-who/>
        <f:multi-language-storage/>
    </features>
    -->
</model>
