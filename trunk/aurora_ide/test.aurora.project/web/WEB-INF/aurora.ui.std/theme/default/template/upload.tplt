<span style="display:${showupload}"><span id="${id}"></span></span>
<div style="height:1px;background-color:#666;font-size:0px"> </div>
<SCRIPT LANGUAGE="JavaScript">
window.${id}_download_path = '${downloadurl}';
function ${id}(){
    var jsid = Aurora.getCookie('JSID');
    var jsessionid = Aurora.getCookie('JSESSIONID');
    var settings = {
        upload_url : '${uploadurl};jsessionid='+jsessionid+'?JSID='+jsid,
        flash_url : "${context_path}/resource/aurora.ui.std/default/upload/swfupload.swf"
    };
    Ext.apply(settings, {
        button_placeholder_id: "${id}",
        post_params: {"source_type" : "${sourcetype}","pkvalue":${pkvalue},"JSID":jsid||''},
        button_width: "${buttonwidth}",
        button_height: "23",
        debug: false,
        button_window_mode: SWFUpload.WINDOW_MODE.TRANSPARENT,
        button_image_url:"${context_path}/resource/aurora.ui.std/default/upload/s.gif",
        button_cursor: SWFUpload.CURSOR.HAND,
        button_text: '<a class="theFont" >${text}</a>',
        button_text_style: ".theFont {cursor:hand;text-decoration:underline;font-family: 宋体;font-size:12px;text-align:center;}",
        button_text_top_padding: 2,
        file_size_limit: ${filesize}, //默认单位是KB,0表示无限制
        file_types:'${filetype}',
        file_queued_handler : function(file){
            $('${id}_ds').create({
                file_id : file.id,
                file_name : file.name,
                file_size : file.size,
                table_name: "${sourcetype}",
                table_pk_value : ${pkvalue},
                percent : 0
            })
        },
        upload_success_handler : function(file, serverData, responseReceived) {
            
            var record = $('${id}_ds').find('file_id', file.id);
            if (record) {
                if(serverData != '') record.set('attachment_id',serverData);
                record.set('status', 1);
                record.commit();
            }
        },
        file_queue_error_handler : function(file, code, message) {
            try {
                var msg;
                switch (code) {
                    case SWFUpload.QUEUE_ERROR.QUEUE_LIMIT_EXCEEDED :
                        msg = '超出上传文件数量限制';
                        break;
                    case SWFUpload.QUEUE_ERROR.FILE_EXCEEDS_SIZE_LIMIT :
                        msg = '超出上传文件大小限制! (不能超过' + window.formatFileSize(1024 * window.${id}.settings.file_size_limit)+ ')';
                        break;
                    case SWFUpload.QUEUE_ERROR.ZERO_BYTE_FILE :
                        msg = '文件不能为空';
                        break;
                    case SWFUpload.QUEUE_ERROR.INVALID_FILETYPE :
                        msg = '不能上传此文件类型!<br/>(仅限于 '+ window.${id}.settings.file_types + ')';
                        break;
                    default :
                        if (file !== null) {
                            alert("Unhandled Error");
                        }
                        break;
                }
                if (msg) {
                    Aurora.showErrorMessage('错误', msg);
                }
            } catch (e) {}
        },
        file_dialog_complete_handler : function(numFilesSelected, numFilesQueued) {
            try {
                this.startUpload();
            } catch (ex) {
                this.debug(ex);
            }
        },
        upload_progress_handler : function(file, bytesLoaded, bytesTotal) {
            try {
                var percent = Math.ceil((bytesLoaded / bytesTotal) * 100);
                var record = $('${id}_ds').find('file_id', file.id);
                if (record) {
                    record.set('percent', percent);
                }
            } catch (ex) {
                alert(ex)
            }
        },
        upload_error_handler : function(file, code, message) {
            var msg;
            switch (code) {
                case SWFUpload.UPLOAD_ERROR.HTTP_ERROR :
                    switch (message) {
                        case '404' :
                            msg = "上传地址不正确";
                            break;
                        case '500' :
                            msg = "服务端发生错误";
                            break;
                        default :
                            msg = "网络连接失败";
                            break;
                    }
                    break;
                case SWFUpload.UPLOAD_ERROR.MISSING_UPLOAD_URL :
                    msg = "上传地址错误";
                    break;
                case SWFUpload.UPLOAD_ERROR.IO_ERROR :
                    msg = "IO错误";
                    break;
                case SWFUpload.UPLOAD_ERROR.SECURITY_ERROR :
                    msg = "安全错误";
                    break;
                case SWFUpload.UPLOAD_ERROR.UPLOAD_LIMIT_EXCEEDED :
                    msg = "网络连接失败";
                    break;
                case SWFUpload.UPLOAD_ERROR.UPLOAD_FAILED :
                    msg = "上传失败";
                    break;
                case SWFUpload.UPLOAD_ERROR.SPECIFIED_FILE_ID_NOT_FOUND :
                    msg = "文件ID没有找到";
                    break;
                case SWFUpload.UPLOAD_ERROR.FILE_VALIDATION_FAILED :
                    msg = "文件大小或类型出错";
                    break;
                case SWFUpload.UPLOAD_ERROR.UPLOAD_STOPPED :
                    msg = "文件停止上传";
                    break;
            }
            if (msg) {
                Aurora.showErrorMessage('错误', msg);
                var record = $('${id}_ds').find('file_id', file.id);
                if (record) {
                    record.set('status', 0);
                }
            }
        }
    });
    window.${id} = new SWFUpload(settings);
} 
${id}();
new Aurora.Uploader(${config});
</SCRIPT>
${up_table}